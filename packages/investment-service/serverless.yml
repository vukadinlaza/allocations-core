org: allocations
app: core
service: investment-v2
frameworkVersion: "2"
variablesResolutionMode: 20210326

plugins:
  - serverless-plugin-monorepo
  - serverless-webpack
  - serverless-prune-plugin
  - "@allocations/serverless-allocations-redtail"

custom:
  secrets: ${ssm:/aws/reference/secretsmanager/allocations-core/${opt:stage}}
  redtail:
    config: ${file(./redtail.json)}
  prune:
    automatic: true
    number: 2

provider:
  name: aws
  endpointType: PRIVATE
  vpcEndpointIds:
    - vpce-0cc4064fecca36cab
  vpc:
    securityGroupIds:
      - sg-0245432c2213eeeb8
      - sg-0665e26c1dc22d6dd
    subnetIds:
      - subnet-016539b44e6b89113
      - subnet-01a39dab42b630de6
  runtime: nodejs14.x
  lambdaHashingVersion: 20201221
  memorySize: 512
  environment:
    APP_SECRET: ${self:custom.secrets.APP_SECRET}
    MONGODB_URI: ${self:custom.secrets.MONGODB_URI}
    DOCSPRING_TOKEN: ${self:custom.secrets.DOCSPRING_TOKEN}
    AIRTABLE_API_KEY: ${self:custom.secrets.AIRTABLE_API_KEY}
    AIRTABLE_DEAL_TRACKER_BASE_ID: ${self:custom.secrets.AIRTABLE_DEAL_TRACKER_BASE_ID}
    AIRTABLE_DEAL_TRACKER_TABLE_ID: ${self:custom.secrets.AIRTABLE_DEAL_TRACKER_TABLE_ID, ""}
    NAME_SCAN_API_KEY: ${self:custom.secrets.NAME_SCAN_API_KEY}
    SKIP_AIRTABLE_SYNC: ${self:custom.secrets.SKIP_AIRTABLE_SYNC}
  apiGateway:
    resourcePolicy:
      - Effect: Allow
        Principal: "*"
        Action: execute-api:Invoke
        Resource:
          - execute-api:/*
        Condition:
          StringEquals:
            aws:SourceVpc: vpc-0d05ab0d45d1ddbd5
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        ["s3:GetObject", "s3:PutObject", "s3:ListBucket", "s3:DeleteObject"]
      Resource:
        - "arn:aws:s3:::allocations-deal-documents-${opt:stage, 'dev'}/*"

functions:
  initialize:
    handler: service/initialize.handler
    events:
      - http:
          method: POST
          path: initialize

  updateAirtableBlueSkyFees:
    handler: service/blue-skys/index.handler
    events:
      - sns:
          arn: ${redtail:service_topic}
          topicName: investments
          filterPolicy:
            phase: [signed]

  updateAirtableInvestmentKYCData:
    handler: service/name-scan/index.handler
    events:
      - sns:
          arn: ${redtail:service_topic}
          topicName: investments
          filterPolicy:
            phase: [signed]

  resyncWithAirtable:
    handler: service/airtable-failed/resync.handler
    events:
      - http:
          method: POST
          path: airtable-sync-failed/resync

  uploadAgreement:
    handler: service/generate-agreements/uploaded.handler
    events:
      - s3:
          bucket: allocations-deal-documents-${opt:stage, 'dev'}
          event: s3:ObjectCreated:*
          existing: true
          rules:
            - prefix: investments/
            - suffix: subscription-agreement.pdf

  agreementsCheck:
    handler: service/agreements-pending/check.handler
    events:
      - http:
          method: POST
          path: agreements-pending/check

  edit:
    handler: service/edit.handler
    events:
      - http:
          method: POST
          path: edit

  kycComplete:
    handler: service/kyc-pending/complete.handler
    events:
      - sns:
          arn: ${redtail:service_topic}
          filterPolicy:
            app: [core]
            service: [investment-v2]
            filterKey: [investment-kyc]
            event: [kyc-results]
